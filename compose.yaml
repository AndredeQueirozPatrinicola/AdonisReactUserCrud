services:
  api:
    image: api:latest
    build:
      context: .
      dockerfile: backend/Dockerfile
    volumes:
      - ./backend:/app
      - .env:/app/.env
    ports: 
      - '${PORT:-5000}:5000'
    command:
      - sh
      - -c
      - |
        cd /app/ &&
        npm install &&
        node ace migration:run &&
        npm run dev
    depends_on:
      db:
        condition: service_healthy

  react:
    image: frontend-dev:latest
    build:
      context: .
      dockerfile: frontend/Dockerfile
    volumes:
      - ./frontend:/app
      - .env:/app/.env
    ports: 
      - '${FRONT_PORT:-3000}:3000'  
    command:
      - sh
      - -c
      - |
        cd /app/ &&
        npm install &&
        npm run dev

  db:
    image: mysql
    restart: always
    environment:
      MYSQL_DATABASE: '${DB_DATABASE:-adonis}'  
      MYSQL_USER: '${DB_USER:-user}'  
      MYSQL_PASSWORD: '${DB_PASSWORD:-password}' 
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD:-password}' 
    ports:
      - '${DB_PORT:-3306}:3306'
    expose:
      - '${DB_PORT:-3306}'  
    volumes:
      - mysqldb:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u ${DB_DATABASE:-adonis} --password=${DB_PASSWORD:-password}"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  mysqldb: